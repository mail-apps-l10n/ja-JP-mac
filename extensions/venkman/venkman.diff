Only in venkman/: .DS_Store
diff -uw venkman/profile.csv.tpl chrome/profile.csv.tpl
--- venkman/profile.csv.tpl	2005-02-27 22:21:50.000000000 +0900
+++ chrome/profile.csv.tpl	2008-01-17 04:31:59.000000000 +0900
@@ -1,4 +1,4 @@
-# full-url, file-name, function-name, start-line, end-line, call-count, recurse-depth, total-time, min-time, max-time, avg-time
+# full-url, file-name, function-name, start-line, end-line, call-count, recurse-depth, total-time, min-time, max-time, avg-time, own-total-time, own-min-time, own-max-time, own-avg-time
 @-item-start
-$full-url, $file-name, $function-name, $start-line, $end-line, $call-count, $recurse-depth, $total-time, $min-time, $max-time, $avg-time
+$full-url, $file-name, $function-name, $start-line, $end-line, $call-count, $recurse-depth, $total-time, $min-time, $max-time, $avg-time, $own-total-time, $own-min-time, $own-max-time, $own-avg-time
 @-item-end
diff -uw venkman/profile.txt.tpl chrome/profile.txt.tpl
--- venkman/profile.txt.tpl	2005-02-27 22:21:50.000000000 +0900
+++ chrome/profile.txt.tpl	2008-01-17 04:31:59.000000000 +0900
@@ -16,6 +16,7 @@
     Function Name: $function-name  (Lines $start-line - $end-line)
     Total Calls: $call-count (max recurse $recurse-depth)
     Total Time: $total-time (min/max/avg $min-time/$max-time/$avg-time)
+    Time (ex. calls): $own-total-time (min/max/avg $own-min-time/$own-max-time/$own-avg-time)
 
 @-item-end
   -------------------------------------------------------------------------------
diff -uw venkman/profile.xml.tpl chrome/profile.xml.tpl
--- venkman/profile.xml.tpl	2005-02-27 22:21:50.000000000 +0900
+++ chrome/profile.xml.tpl	2008-01-17 04:31:59.000000000 +0900
@@ -29,6 +29,9 @@
                   mintime="$min-time"
                   maxtime="$max-time"
                   totaltime="$total-time"
+                  ownmintime="$own-min-time"
+                  ownmaxtime="$own-max-time"
+                  owntotaltime="$own-total-time"
                   callcount="$call-count"
                   function="$function-name"
                   filename="$file-name"
diff -uw venkman/venkman-help.tpl chrome/venkman-help.tpl
--- venkman/venkman-help.tpl	2004-10-13 03:31:56.000000000 +0900
+++ chrome/venkman-help.tpl	2008-01-17 04:31:59.000000000 +0900
@@ -108,7 +108,7 @@
           <a href="http://www.hacksrus.com/~ginda/venkman/faq/venkman-faq.html">Venkman FAQ</a>.
       </span>
       <span class="newbie-help">
-        The check boxes control which fields the search is performed on...
+        The check boxes control which fields the search is performed on…
         <ul>
           <li><b>Command Names</b> matches the command name, as you might enter
             it in the </b>Interactive Session</b>.
diff -uw venkman/venkman-overlay.dtd chrome/venkman-overlay.dtd
--- venkman/venkman-overlay.dtd	2005-02-27 23:52:38.000000000 +0900
+++ chrome/venkman-overlay.dtd	2008-01-17 04:31:59.000000000 +0900
@@ -38,7 +38,7 @@
    - ***** END LICENSE BLOCK ***** -->
 
 <!ENTITY venkmanCmd.label				        "JavaScript Debugger">
-<!ENTITY venkmanCmd.akey				                   "D">
+<!ENTITY venkmanCmd.accesskey "D">
 
 <!ENTITY vnkButton.label   "JavaScript Debugger">
   
diff -uw venkman/venkman.dtd chrome/venkman.dtd
--- venkman/venkman.dtd	2005-02-05 21:48:16.000000000 +0900
+++ chrome/venkman.dtd	2008-01-17 04:31:59.000000000 +0900
@@ -104,8 +104,8 @@
 <!ENTITY BPProps.FunctionName.label "Function">
 <!ENTITY BPProps.TriggerCount.label "Trigger count">
 <!ENTITY BPProps.OneTime.label      "Clear breakpoint after first trigger">
-<!ENTITY BPProps.Then.label         "Then ...">
-<!ENTITY BPProps.ConditionalCheck.label      "When triggered, execute...">
+<!ENTITY BPProps.Then.label         "Then …">
+<!ENTITY BPProps.ConditionalCheck.label      "When triggered, execute…">
 <!ENTITY BPProps.NeverStopRadio.label        "Continue regardless of result">
 <!ENTITY BPProps.AlwaysStopRadio.label       "Stop regardless of result">
 <!ENTITY BPProps.ConditionalBreakRadio.label "Stop if result is true">
diff -uw venkman/venkman.properties chrome/venkman.properties
--- venkman/venkman.properties	2005-02-27 23:54:54.000000000 +0900
+++ chrome/venkman.properties	2008-03-08 17:29:39.000000000 +0900
@@ -36,13 +36,13 @@
 #
 # ***** END LICENSE BLOCK *****
 
-# NOTE ON LEADING/TRAILING SPACES AND QUOTES...
-# Strings in this file are stripped of leading and trailing qoutes, if they are
+# NOTE ON LEADING/TRAILING SPACES AND QUOTES…
+# Strings in this file are stripped of leading and trailing quotes, if they are
 # present.  This allows you to express leading and trailing whitespace, which
 # would otherwise be trimmed by the stringbundle code.  In order to express
 # a leading or trailing quote, use two of them.
 #
-# For example...
+# For example…
 #
 # my.message1 = "          foo"
 # my.message2 = "          foo
@@ -58,7 +58,7 @@
 # character set to convert unicode messages to before writing them to a
 # profile report, or generated help text.
 msg.report.charset = utf-8
-msg.locale.version = 0.9.85
+msg.locale.version = 0.9.87.3
 msn.bad.locale     = This version of Venkman is meant to work with a ``%1$S'' locale, but you are currently using a locale marked ``%2$S''.  Chances are, you're going to have problems.  Please change to the default locale, or upgrade your language pack.
 
 msg.release.url = http://www.mozilla.org/releases/
@@ -69,7 +69,7 @@
 err.invalid.param  = Invalid value for parameter %1$S (%2$S)
 # 1 url, 2 fileName, 3 lineNumber, 4 reason
 err.subscript.load = Error loading subscript from <%1$S>.
-err.no.debugger    = JS Debugger Service is not installed.
+err.no.debugger    = JS Debugger Service is not installed. (Perhaps this application was built [see about:buildconfig] with --disable-jsd, which suppresses building core support required for Venkman. You can resolve this by recompiling without that option or complaining to your vendor [who shouldn't be using that flag].)
 err.failure        = Operation Failed: %1$S
 err.no.stack       = No Stack
 
@@ -97,6 +97,7 @@
 msn.err.failure         = Operation Failed: %1$S
 msn.err.no.section      = Missing section before ``%1$S'' in <%2$S>.
 msn.err.no.template     = No pref for template named ``%1$S''.
+msn.err.not.a.dom.node  = Expression ``%1$S'' is not a DOM Node.
 msn.err.internal.dispatch  = Internal error dispatching command ``%1$S''.
 msn.err.source.load.failed = Error loading URL <%1$S>: %2$S.
 msn.err.no.such.container  = No such container ``%1$S''.
@@ -231,11 +232,13 @@
 msn.profile.saved    = Profile data saved to <%1$S>.
 msg.profile.cleared  = Profile data cleared.
 msn.profile.saving   = Generating profile report, file %1$S of %2$S
-msg.open.file        = Open File...
-msg.save.file        = Save As...
-msg.open.url         = Enter a URL to Load...
-msg.save.profile     = Save Profile Data As...
-msg.save.source      = Save Source As...
+msg.open.file        = Open File…
+msg.save.file        = Save As…
+msg.open.url         = Enter a URL to Load…
+msn.maxtabs.reached  = The maximum number of source views (%1$S) has been reached. Alter the "source2View.maxTabs" preference if you want to change this limit. Source will now load in an existing tab.
+msg.maxtabs.alert    = Warn me again next time this happens.
+msg.save.profile     = Save Profile Data As…
+msg.save.source      = Save Source As…
 msg.navigator.xul    = Navigator Window
 msg.browser.xul      = Browser Window
 msg.enter.watch      = Enter expression to watch:
@@ -297,7 +300,8 @@
 msn.fmt.frame.location = %1$S, line %2$S, pc %3$S
 # 1: function name, 2: start line, 3: end line, 4: call count, 5: recurse,
 # 6: total, 7: min, 8: max, 9: avg
-msn.fmt.profile.str = %1$S: %2$S-%3$S, %4$S call(s)%5$S, %6$Sms total, %7$Sms min, %8$Sms max, %9$Sms avg
+msn.fmt.profile.str = %1$S: %2$S-%3$S, %4$S call(s)%5$S, %6$Sms total, %7$Sms min, %8$Sms max, %9$Sms avg, excluding calls: %10$S
+msn.fmt.profile.str2 = %1$Sms total, %2$Sms min, %3$Sms max, %4$Sms avg
 # 1: max recurse depth
 msn.fmt.profile.recurse = " (max depth %1$S)
 
@@ -328,6 +332,8 @@
 #msg.doc.popuphdr     = Popups
 #msg.doc.keyhdr       = Keys
 
+msg.help.hostproblem  = You're running Venkman in an application which doesn't have a browser. Therefore, we can't show you this help content. If you install Venkman in Firefox, SeaMonkey or Flock, you can copy this URL into the address bar to show the help: x-jsd:help . You can also use the help command with a parameter to get help information on a specific command.
+
 msg.note.console     = This command is available from the console.
 msg.note.noconsole    = This command is NOT available from the console.
 msg.note.needstack   = You must be stopped at a breakpoint to use this command.
@@ -454,14 +460,14 @@
 cmd.break.params = [<url-pattern> <line-number> [<properties> [<parent>]]]
 cmd.break.help   = Set a breakpoint in all urls matching <url-pattern> at the line number <line-number>.  <properties> is a JavaScript object representing the properties of the breakpoint.  <parent> is a reference to the Future Breakpoint object to assign as the parent.  If no parameters are specified all active breakpoints will be listed.  See also: |set-fbreak|, |clear|.
 
-cmd.break-props.label  = Breakpoint &Properties...
+cmd.break-props.label  = Breakpoint &Properties…
 cmd.break-props.params = <break-wrapper>
 cmd.break-props.help   = Display the properties dialog for the breakpoint represented by <break-wrapper>.
 
 cmd.change-container.params = <view-id> <new-type>
 cmd.change-container.help   = Changes the type of the container in which <view-id> resides to <new-type>.  <view-id> must be one of: ``scripts'', ``windows'', ``locals'', ``watches'', ``breaks'', ``stack'', ``source'', ``source2'', or ``session''.  <new-type> must be one of: ``horizontal'' for a horizontal layout, ``vertical'' for a vertical layout, or ``tab'' for a tab box layout.
 
-cmd.change-value.label   = Change &Value...
+cmd.change-value.label   = Change &Value…
 cmd.change-value.params  = <parent-value> <property-name> [<new-value>]
 cmd.change-value.help    = Changes the value of the property named <property-name> of the jsdValue <parent-value>.  If the jsdValue <new-value> is specified, this will become the new value of the property, otherwise a dialog box is displayed, allowing the user to enter a new expression for the value.
 
@@ -542,19 +548,19 @@
 cmd.cmd-copy-link-url.params = <url>
 cmd.cmd-copy-link-url.help   = Copies the URL of the current link to clipboard.
 
-cmd.cmd-mozilla-prefs.label  = &Mozilla Preferences...
+cmd.cmd-mozilla-prefs.label  = &Mozilla Preferences…
 cmd.cmd-mozilla-prefs.params = 
 cmd.cmd-mozilla-prefs.help   = 
 
-cmd.cmd-prefs.label  = Pr&eferences...
+cmd.cmd-prefs.label  = Pr&eferences…
 cmd.cmd-prefs.params = 
 cmd.cmd-prefs.help   = 
 
-cmd.cmd-venkman-prefs.label  = JavaScript Debugger Pr&eferences...
+cmd.cmd-venkman-prefs.label  = JavaScript Debugger Pr&eferences…
 cmd.cmd-venkman-prefs.params = 
 cmd.cmd-venkman-prefs.help   = 
 
-cmd.cmd-venkman-opts.label  = &Options...
+cmd.cmd-venkman-opts.label  = &Options…
 cmd.cmd-venkman-opts.params = 
 cmd.cmd-venkman-opts.help   = 
 
@@ -600,7 +606,7 @@
 cmd.dumptree.params = <tree> [<depth>]
 
 cmd.emode.params = [<mode>]
-cmd.emode.help   = Sets what action the debugger should take when an error occurs in the debug target.  |emode ignore| ignores all errors, |emode trace| shows a log of the error in the console, and |emode break| stops excecution when an error is thrown.  |emode| without any parameter will display the current error mode.  Note that |emode| controls what happens when an exception goes uncaught, to control what happens when an exception is *thrown*, use |tmode|.
+cmd.emode.help   = Sets what action the debugger should take when an error occurs in the debug target.  |emode ignore| ignores all errors, |emode trace| shows a log of the error in the console, and |emode break| stops execution when an error is thrown.  |emode| without any parameter will display the current error mode.  Note that |emode| controls what happens when an exception goes uncaught, to control what happens when an exception is *thrown*, use |tmode|.
 
 cmd.eval.params = <expression>
 cmd.eval.help   = Evaluates <expression> in the scope of the debug target's current frame.  See also: |frame|, |where|, |props|, and |evald|.
@@ -645,7 +651,7 @@
 cmd.find-ctor.params = <jsd-value>
 cmd.find-ctor.help   = Focus the constructor of the object referenced by the jsdIValue <jsd-value>.
 
-cmd.find-file.label  = &Open File...
+cmd.find-file.label  = &Open File…
 cmd.find-file.key    = accel O
 cmd.find-file.params = [<file-name>]
 cmd.find-file.help   = Displays the contents of the file located at <file-name> in the script view, where <file-name> is an operating system specific path string.  If <file-name> is not provided, or is the character '?', a file chooser widget will be displayed.
@@ -664,7 +670,7 @@
 cmd.find-sourcetext-soft.params = <source-text> [<range-start> [<range-end> [<details> [<target-line>]]]]
 cmd.find-sourcetext-soft.help   = Functions the same as |find-sourcetext|, except the view is not scrolled if <target-line> is already visible.
 
-cmd.find-string.label = Fin&d in This File...
+cmd.find-string.label = Fin&d in This File…
 cmd.find-string.key   = accel F
 cmd.find-string.help  = Brings up a ``Find Dialog'' for the currently selected tab.
 
@@ -698,6 +704,10 @@
 cmd.help.params = [<pattern>]
 cmd.help.help   = Displays help on <pattern>, which can be a full command name, or the first few characters of the command name.  If <pattern> matches more than one command, help on all matching commands will be displayed.  If <pattern> is not provided, a command reference will be loaded in a browser window.
 
+cmd.inspect.label  = &Inspect in DOM Inspector
+cmd.inspect.params = [<expression>]
+cmd.inspect.help   = Inspects the result of <expression> in DOM Inspector.
+
 cmd.loadd.label  = Load Script in Debugger Scope
 cmd.loadd.params = <url>
 cmd.loadd.help   = Executes the contents of the url specified by <url> in the context of the debugger.  Useful for loading debugger plugins.  See also: The |initialScripts| pref.
@@ -717,7 +727,7 @@
 cmd.open-dialog.help   = Opens a dialog window and loads the source from <url>.  This is typically used to open a new XUL window, though it can be used to load a web page without chrome.
 
 cmd.open-url.help  = Prompts the user for a url to load in the source view.
-cmd.open-url.label = Open Web &Location...
+cmd.open-url.label = Open Web &Location…
 cmd.open-url.key   = accel shift L
 
 cmd.pprint.params = [<toggle>]
@@ -777,7 +787,7 @@
 cmd.restore-layout.params = [<name>]
 cmd.restore-layout.help   = Restores the view layout named <name>.  If <name> is not provided, the list of available layouts will be displayed.  The special name |factory| can be used to restore a default layout.
 
-cmd.restore-settings.label  = Restore Break/Watch Se&ttings...
+cmd.restore-settings.label  = Restore Break/Watch Se&ttings…
 cmd.restore-settings.params = [<settings-file>]
 cmd.restore-settings.help   = This command is basically an alias to |loadd|, except that <settings-file> is optional.  If <settings-file> is not provided, or is ``?'', a file chooser widget will be displayed.  This command is placed in the context menu of the Breakpoints and Watch views to make it easy to restore saved breakpoints and watches.
 
@@ -792,24 +802,24 @@
 cmd.save-layout.params = [<name>]
 cmd.save-layout.help   = Saves the current window layout, giving it the name <name>.  The layout can be restored later with the |restore-layout| command.  If <name> is not provided, the list of available layouts will be displayed.  Save to the name ``default'' to set the default layout Venkman restores on startup.  The ``factory'' layout cannot be overwritten.
 
-cmd.save-source-tab.label = &Save Source As...
+cmd.save-source-tab.label = &Save Source As…
 cmd.save-source-tab.params = [<index> [<target-file>]]
 cmd.save-source-tab.key   = accel S
 cmd.save-source-tab.help  = Saves the contents of the source file displayed in the tab at the position specified by <index> to a file on the local system.  If <index> is not provided, the current tab is saved.  If <target-file> is not provided, or is the character '?', a file chooser widget will be displayed.  <target-file> is an operating system specific path string.
 
-cmd.save-profile.label = Save P&rofile Data As...
+cmd.save-profile.label = Save P&rofile Data As…
 cmd.save-profile.params = [<target-file> [<url> [<...>]]
 cmd.save-profile.help = Saves the profile data collected for one or more source files specified by <url> into the file at <target-file>.  If <target-file> is not provided, or is the character '?', a file chooser widget will be displayed.  If <url> is not provided, all profile data is saved.  <target-file> is an operating system specific path string, <url> is a complete url.
 
-cmd.save-breakpoints.label  = &Save Breakpoint Settings...
+cmd.save-breakpoints.label  = &Save Breakpoint Settings…
 cmd.save-breakpoints.params = [<settings-file>]
 cmd.save-breakpoints.help   = Save the current list of breakpoints to a JavaScript file, so that they can be restored later.  If <settings-file> is not provided, or is the character '?', a file chooser widget will be displayed.  <settings-file> can be a reference to a |LocalFile| object or a string representation of a native path.  See also: |save-settings|, |save-watches|, |restore-settings|.
 
-cmd.save-settings.label  = Sa&ve Break/Watch Settings...
+cmd.save-settings.label  = Sa&ve Break/Watch Settings…
 cmd.save-settings.params = [<settings-file>]
 cmd.save-settings.help   = Save the current list of breakpoints and watches to a JavaScript file, so that they can be restored later.  If <settings-file> is not provided, or is the character '?', a file chooser widget will be displayed.  <settings-file> can be a reference to a |LocalFile| object or a string representation of a native path.  See also: |save-watches|, |save-breakpoints|, |restore-settings|.
 
-cmd.save-watches.label  = &Save Watch Settings...
+cmd.save-watches.label  = &Save Watch Settings…
 cmd.save-watches.params = [<settings-file>]
 cmd.save-watches.help   = Save the current list of watches to a JavaScript file, so that they can be restored later.  If <settings-file> is not provided, or is the character '?', a file chooser widget will be displayed.  <settings-file> can be a reference to a |LocalFile| object or a string representation of a native path.  See also: |save-settings|, |save-breakpoints|, |restore-settings|.
 
@@ -833,6 +843,8 @@
 
 cmd.scope.help = Lists the properties of the topmost object in the scope chain for the current frame.
 
+cmd.toggle-forcescriptload.label = &Force function name guessing
+
 cmd.toggle-functions.label  = Include &Functions
 
 cmd.show-functions.params = [<toggle>]
@@ -853,6 +865,10 @@
 cmd.show-most-recent.params = [<toggle>]
 cmd.show-most-recent.help = Controls whether the Loaded Scripts view should show only the most recent script from a given URL, or all of them.  With this off, you may notice duplicate entries in the Loaded Scripts view.  The value of <toggle> can be |true|, |on|, |yes|, or |1| to turn the flag on; |false|, |off|, |no|, or |0| to turn it off; or |toggle| to invert the current state.  If <toggle> is not provided, the current state will be displayed.
 
+cmd.show-profile.label = &Display Profile Data
+cmd.show-profile.params = [<url> [<...>]]
+cmd.show-profile.help = Displays the profile data collected for one or more source files specified by <url>. If <url> is not provided, all profile data is saved.
+
 cmd.startup-init.label  = Initialize at &Startup
 cmd.startup-init.params = [<toggle>]
 cmd.startup-init.help   = Sets the state of the "Initialize at Startup" feature.  With this feature enabled, the debugger will begin tracking scripts when the browser is first started, instead of waiting until the user interface is launched.  This will allow the script list to display files that were loaded before you started the debugger user interface.  This feature incurs a *slight* performance hit.  The value of <toggle> can be |true|, |on|, |yes|, or |1| to turn the flag on; |false|, |off|, |no|, or |0| to turn it off; or |toggle| to invert the current state.  If <toggle> is not provided, the current state will be displayed.
@@ -881,7 +897,7 @@
 cmd.this-expr.help   = Sets the ``evaluation object'' to the result of <expression>.  The evaluation object is used as the |this| object in all evaluations.  The result of <expression> *must* be an object.  See also: |eval|, |props|, |watch-expr|, and |set-eval-obj|.
 
 cmd.tmode.params = [<mode>]
-cmd.tmode.help   = Sets what action the debugger should take when an exception is thrown from the debug target.  |tmode ignore| ignores all exceptions, |tmode trace| shows a log of the exception to the console, and |tmode break| stops excecution when an exception is thrown.  |tmode| without any parameter will display the current throw mode.  Note that |tmode| controls what happens when an exception is *thrown*, to control what happens when an exception reaches the top level and becomes an error, use |emode|.  The key combination Control + T can be used to cycle the throw mode.
+cmd.tmode.help   = Sets what action the debugger should take when an exception is thrown from the debug target.  |tmode ignore| ignores all exceptions, |tmode trace| shows a log of the exception to the console, and |tmode break| stops execution when an exception is thrown.  |tmode| without any parameter will display the current throw mode.  Note that |tmode| controls what happens when an exception is *thrown*, to control what happens when an exception reaches the top level and becomes an error, use |emode|.  The key combination Control + T can be used to cycle the throw mode.
 
 cmd.tm-break.label  = Stop for &Exceptions
 cmd.tm-cycle.label  = Cycle Exception Mode
@@ -931,11 +947,11 @@
 cmd.remove-watch.params = <index> [<...>]
 cmd.remove-watch.help   = Removes the watch(es) at the 0 based index specified by <index>.
 
-cmd.watch-expr.label = Add &Watch Expression...
-cmd.watch-expr.params = [<expression>]
+cmd.watch-expr.label = Add &Watch Expression…
+cmd.watch-expr.params = [<watch-expression>]
 cmd.watch-expr.help   = Evaluates <expression> in the debug target scope and adds the result to the watch window.  If <expression> is not provided, all watches are printed to the console.
 
-cmd.watch-exprd.params = [<expression>]
+cmd.watch-exprd.params = [<watch-expression>]
 cmd.watch-exprd.help   = Evaluates <expression> in the debugger scope and adds the result to the watch window.  If <expression> is not provided, all watches are printed to the console.
 
 cmd.watch-property.params = <jsd-value> <property-name>
